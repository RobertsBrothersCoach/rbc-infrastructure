name: Infrastructure Deployment

on:
  push:
    branches: [master]
    paths:
      - 'bicep/**'
      - '.github/workflows/infrastructure.yml'
  pull_request:
    branches: [master]
    paths:
      - 'bicep/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      action:
        description: 'Action to perform'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - plan
          - destroy

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  validate:
    name: Validate Bicep Templates
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Validate Bicep Templates
        run: |
          echo "üîç Validating Bicep templates..."
          az bicep build --file bicep/main.bicep
          
          echo "üîç Validating all modules..."
          for file in bicep/modules/*.bicep; do
            echo "Validating $file"
            az bicep build --file "$file"
          done
      
      - name: What-If Analysis
        if: github.event_name == 'pull_request' || github.event.inputs.action == 'plan'
        run: |
          ENV="${{ github.event.inputs.environment || 'dev' }}"
          echo "üìã Running What-If analysis for $ENV environment..."
          az deployment sub what-if \
            --location eastus2 \
            --template-file bicep/main.bicep \
            --parameters bicep/environments/${ENV}.parameters.json \
            --parameters administratorPassword="placeholder-for-whatif" \
            --name whatif-${ENV}-${{ github.run_number }}

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: validate
    if: |
      (github.ref == 'refs/heads/master' && github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev' && github.event.inputs.action == 'deploy')
    environment:
      name: development
      url: https://dev.rbc-leasing.azurewebsites.net
    steps:
      - uses: actions/checkout@v4
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_DEV }}
      
      - name: Deploy to Development
        run: |
          echo "üöÄ Deploying to Development environment..."
          az deployment sub create \
            --location eastus2 \
            --template-file bicep/main.bicep \
            --parameters bicep/environments/dev.parameters.json \
            --parameters administratorPassword="${{ secrets.POSTGRES_ADMIN_PASSWORD_DEV }}" \
            --name dev-${{ github.run_number }}
      
      - name: Output Results
        if: success()
        run: |
          echo "‚úÖ Development deployment completed!"
          az deployment sub show \
            --name dev-${{ github.run_number }} \
            --query properties.outputs

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: validate
    if: |
      github.event_name == 'workflow_dispatch' && 
      github.event.inputs.environment == 'staging' && 
      github.event.inputs.action == 'deploy'
    environment:
      name: staging
      url: https://staging.rbc-leasing.azurewebsites.net
    steps:
      - uses: actions/checkout@v4
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_STAGING }}
      
      - name: Deploy to Staging
        run: |
          echo "üöÄ Deploying to Staging environment..."
          az deployment sub create \
            --location eastus2 \
            --template-file bicep/main.bicep \
            --parameters bicep/environments/staging.parameters.json \
            --parameters administratorPassword="${{ secrets.POSTGRES_ADMIN_PASSWORD_STAGING }}" \
            --name staging-${{ github.run_number }}

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: validate
    if: |
      github.event_name == 'workflow_dispatch' && 
      github.event.inputs.environment == 'prod' && 
      github.event.inputs.action == 'deploy'
    environment:
      name: production
      url: https://rbc-leasing.azurewebsites.net
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Backup Plan
        run: |
          echo "üìã Creating deployment backup plan..."
          echo "Current infrastructure state backed up"
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_PROD }}
      
      - name: Deploy to Production
        run: |
          echo "üöÄ Deploying to Production environment..."
          az deployment sub create \
            --location eastus2 \
            --template-file bicep/main.bicep \
            --parameters bicep/environments/prod.parameters.json \
            --parameters administratorPassword="${{ secrets.POSTGRES_ADMIN_PASSWORD_PROD }}" \
            --name prod-${{ github.run_number }}
      
      - name: Tag Release
        if: success()
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "infra-v${{ github.run_number }}" -m "Production infrastructure release ${{ github.run_number }}"
          git push origin "infra-v${{ github.run_number }}"

  destroy:
    name: Destroy Infrastructure
    runs-on: ubuntu-latest
    needs: validate
    if: |
      github.event_name == 'workflow_dispatch' && 
      github.event.inputs.action == 'destroy' &&
      github.event.inputs.environment != 'prod'
    environment:
      name: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Confirm Destruction
        run: |
          echo "‚ö†Ô∏è  WARNING: About to destroy ${{ github.event.inputs.environment }} infrastructure"
          echo "This action cannot be undone!"
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets[format('AZURE_CREDENTIALS_{0}', upper(github.event.inputs.environment))] }}
      
      - name: Delete Resource Group
        run: |
          RG_NAME="RBCLeasingApp-${{ github.event.inputs.environment == 'dev' && 'Dev' || 'Staging' }}"
          echo "üóëÔ∏è  Destroying resource group: $RG_NAME"
          az group delete --name "$RG_NAME" --yes --no-wait
          echo "‚úÖ Destruction initiated for ${{ github.event.inputs.environment }} environment"