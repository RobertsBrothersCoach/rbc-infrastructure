{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "4779895742139456596"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "enableHA": {
      "type": "bool"
    },
    "backupRegion": {
      "type": "string"
    },
    "keyVaultName": {
      "type": "string"
    },
    "administratorPassword": {
      "type": "securestring"
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Log Analytics Workspace ID for diagnostic settings"
      }
    }
  },
  "variables": {
    "skuName": "[if(equals(parameters('environmentName'), 'prod'), 'Standard_D4ds_v4', 'Standard_B2s')]",
    "storageSizeGB": "[if(equals(parameters('environmentName'), 'prod'), 256, 32)]",
    "adminUsername": "rbcadmin",
    "regionHasZones": "[contains(createArray('eastus', 'eastus2', 'westus2'), parameters('location'))]",
    "availabilityZone": "[if(and(equals(parameters('environmentName'), 'prod'), variables('regionHasZones')), '1', '')]"
  },
  "resources": [
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers",
      "apiVersion": "2024-08-01",
      "name": "[format('psql-rbcleasing-{0}', parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('skuName')]",
        "tier": "[if(equals(parameters('environmentName'), 'prod'), 'GeneralPurpose', 'Burstable')]"
      },
      "properties": {
        "administratorLogin": "[variables('adminUsername')]",
        "administratorLoginPassword": "[parameters('administratorPassword')]",
        "version": "15",
        "availabilityZone": "[variables('availabilityZone')]",
        "storage": {
          "storageSizeGB": "[variables('storageSizeGB')]",
          "autoGrow": "Enabled"
        },
        "backup": {
          "backupRetentionDays": "[if(equals(parameters('environmentName'), 'prod'), 35, 7)]",
          "geoRedundantBackup": "[if(equals(parameters('environmentName'), 'prod'), 'Enabled', 'Disabled')]"
        },
        "highAvailability": {
          "mode": "[if(parameters('enableHA'), if(variables('regionHasZones'), 'ZoneRedundant', 'SameZone'), 'Disabled')]",
          "standbyAvailabilityZone": "[if(and(parameters('enableHA'), variables('regionHasZones')), '2', '')]"
        },
        "dataEncryption": {
          "type": "SystemManaged"
        }
      },
      "identity": {
        "type": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'postgresql-admin-password')]",
      "properties": {
        "value": "[parameters('administratorPassword')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'postgresql-connection-string')]",
      "properties": {
        "value": "[format('Server={0};Database=tourbus_leasing;User Id={1};Password={2};', reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-rbcleasing-{0}', parameters('environmentName'))), '2024-08-01').fullyQualifiedDomainName, variables('adminUsername'), parameters('administratorPassword'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-rbcleasing-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'postgresql-server-name')]",
      "properties": {
        "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-rbcleasing-{0}', parameters('environmentName'))), '2024-08-01').fullyQualifiedDomainName]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-rbcleasing-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'postgresql-username')]",
      "properties": {
        "value": "[variables('adminUsername')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'postgresql-database')]",
      "properties": {
        "value": "tourbus_leasing"
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
      "apiVersion": "2024-08-01",
      "name": "[format('{0}/{1}', format('psql-rbcleasing-{0}', parameters('environmentName')), 'rbc_leasing')]",
      "properties": {
        "charset": "UTF8",
        "collation": "en_US.utf8"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-rbcleasing-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
      "apiVersion": "2024-08-01",
      "name": "[format('{0}/{1}', format('psql-rbcleasing-{0}', parameters('environmentName')), 'log_statement')]",
      "properties": {
        "value": "[if(equals(parameters('environmentName'), 'prod'), 'all', 'ddl')]",
        "source": "user-override"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers/databases', format('psql-rbcleasing-{0}', parameters('environmentName')), 'rbc_leasing')]",
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-rbcleasing-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
      "apiVersion": "2024-08-01",
      "name": "[format('{0}/{1}', format('psql-rbcleasing-{0}', parameters('environmentName')), 'pg_qs.query_capture_mode')]",
      "properties": {
        "value": "ALL",
        "source": "user-override"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers/configurations', format('psql-rbcleasing-{0}', parameters('environmentName')), 'log_statement')]",
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-rbcleasing-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "condition": "[not(equals(parameters('environmentName'), 'prod'))]",
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
      "apiVersion": "2024-08-01",
      "name": "[format('{0}/{1}', format('psql-rbcleasing-{0}', parameters('environmentName')), 'AllowAzureServices')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-rbcleasing-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "condition": "[equals(parameters('environmentName'), 'prod')]",
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
      "apiVersion": "2024-08-01",
      "name": "[format('{0}/{1}', format('psql-rbcleasing-{0}', parameters('environmentName')), 'DenyPublicAccess')]",
      "properties": {
        "startIpAddress": "255.255.255.255",
        "endIpAddress": "255.255.255.255"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-rbcleasing-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('logAnalyticsWorkspaceId')))]",
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.DBforPostgreSQL/flexibleServers/{0}', format('psql-rbcleasing-{0}', parameters('environmentName')))]",
      "name": "pii-audit-logs",
      "properties": {
        "logs": [
          {
            "category": "PostgreSQLLogs",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ],
        "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-rbcleasing-{0}', parameters('environmentName')))]"
      ]
    }
  ],
  "outputs": {
    "serverName": {
      "type": "string",
      "value": "[format('psql-rbcleasing-{0}', parameters('environmentName'))]"
    },
    "databaseName": {
      "type": "string",
      "value": "rbc_leasing"
    },
    "keyVaultSecretUri": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), 'postgresql-connection-string'), '2023-07-01').secretUri]"
    },
    "principalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-rbcleasing-{0}', parameters('environmentName'))), '2024-08-01', 'full').identity.principalId]"
    }
  }
}