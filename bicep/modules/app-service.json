{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "17213877293500268293"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "metadata": {
        "description": "Environment name"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for resources"
      }
    },
    "alwaysOn": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Always on setting"
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "B1",
      "metadata": {
        "description": "App Service Plan SKU"
      }
    },
    "zoneRedundant": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable zone redundancy for high availability"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Key Vault name for accessing secrets"
      }
    },
    "postgresqlSecretUri": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "PostgreSQL connection string secret URI"
      }
    },
    "redisSecretUri": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Redis connection string secret URI"
      }
    }
  },
  "variables": {
    "regionHasZones": "[contains(createArray('eastus', 'eastus2', 'westus2'), parameters('location'))]",
    "effectiveZoneRedundant": "[and(parameters('zoneRedundant'), variables('regionHasZones'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-01-01",
      "name": "[format('asp-rbc-{0}', parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": "[if(variables('effectiveZoneRedundant'), 3, 1)]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true,
        "zoneRedundant": "[variables('effectiveZoneRedundant')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[format('rbc-api-{0}', parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('asp-rbc-{0}', parameters('environmentName')))]",
        "siteConfig": {
          "linuxFxVersion": "NODE|18-lts",
          "alwaysOn": "[parameters('alwaysOn')]",
          "appSettings": [
            {
              "name": "NODE_ENV",
              "value": "[if(equals(parameters('environmentName'), 'prod'), 'production', 'development')]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~18"
            },
            {
              "name": "DB_CONNECTION_STRING",
              "value": "[if(not(empty(parameters('postgresqlSecretUri'))), format('@Microsoft.KeyVault(SecretUri={0})', parameters('postgresqlSecretUri')), '')]"
            },
            {
              "name": "REDIS_URL",
              "value": "[if(not(empty(parameters('redisSecretUri'))), format('@Microsoft.KeyVault(SecretUri={0})', parameters('redisSecretUri')), '')]"
            },
            {
              "name": "JWT_SECRET",
              "value": "[if(not(empty(parameters('keyVaultName'))), format('@Microsoft.KeyVault(VaultName={0};SecretName=jwt-signing-key)', parameters('keyVaultName')), '')]"
            },
            {
              "name": "KEY_VAULT_NAME",
              "value": "[parameters('keyVaultName')]"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "http://localhost:5173",
              "[format('https://rbc-frontend-{0}.azurecontainerapps.io', parameters('environmentName'))]"
            ]
          }
        },
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('asp-rbc-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('keyVaultName')))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
      "name": "[guid(resourceId('Microsoft.Web/sites', format('rbc-api-{0}', parameters('environmentName'))), 'KeyVaultSecretsUser')]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Web/sites', format('rbc-api-{0}', parameters('environmentName'))), '2023-01-01', 'full').identity.principalId]",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', format('rbc-api-{0}', parameters('environmentName')))]"
      ]
    }
  ],
  "outputs": {
    "url": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', format('rbc-api-{0}', parameters('environmentName'))), '2023-01-01').defaultHostName)]"
    },
    "name": {
      "type": "string",
      "value": "[format('rbc-api-{0}', parameters('environmentName'))]"
    },
    "principalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', format('rbc-api-{0}', parameters('environmentName'))), '2023-01-01', 'full').identity.principalId]"
    }
  }
}