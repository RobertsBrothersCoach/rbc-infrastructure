{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "2172776166206518708"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "allowedValues": [
        "dev",
        "qa",
        "prod"
      ],
      "metadata": {
        "description": "Environment name"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for resources"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags for resources"
      }
    },
    "retentionInDays": {
      "type": "int",
      "defaultValue": "[if(equals(parameters('environmentName'), 'prod'), 2555, 30)]",
      "metadata": {
        "description": "Log retention in days (2555 for 7 years PII compliance)"
      }
    },
    "enablePiiAuditLogging": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable PII audit logging"
      }
    },
    "dailyQuotaGb": {
      "type": "int",
      "defaultValue": "[if(equals(parameters('environmentName'), 'prod'), 100, 10)]",
      "metadata": {
        "description": "Daily quota in GB for Application Insights"
      }
    },
    "alertEmailAddress": {
      "type": "string",
      "defaultValue": "devops@tourbus-leasing.com",
      "metadata": {
        "description": "Alert email address"
      }
    },
    "enableSmsAlerts": {
      "type": "bool",
      "defaultValue": "[equals(parameters('environmentName'), 'prod')]",
      "metadata": {
        "description": "Enable SMS alerts for production"
      }
    },
    "smsPhoneNumber": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SMS phone number for alerts"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[format('log-rbcleasing-{0}', parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": "[parameters('retentionInDays')]",
        "features": {
          "enableDataExport": true,
          "immediatePurgeDataOn30Days": "[not(equals(parameters('environmentName'), 'prod'))]",
          "disableLocalAuth": false,
          "enableLogAccessUsingOnlyResourcePermissions": true
        },
        "workspaceCapping": {
          "dailyQuotaGb": "[if(equals(parameters('environmentName'), 'prod'), -1, 5)]"
        },
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('appi-rbcleasing-{0}', parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-rbcleasing-{0}', parameters('environmentName')))]",
        "IngestionMode": "LogAnalytics",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled",
        "RetentionInDays": "[if(equals(parameters('environmentName'), 'prod'), 90, 30)]",
        "ImmediatePurgeDataOn30Days": "[not(equals(parameters('environmentName'), 'prod'))]",
        "DisableLocalAuth": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-rbcleasing-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "condition": "[parameters('enablePiiAuditLogging')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[format('staudit{0}{1}', uniqueString(resourceGroup().id), parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[if(equals(parameters('environmentName'), 'prod'), 'Standard_GRS', 'Standard_LRS')]"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Cool",
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "networkAcls": {
          "defaultAction": "Deny",
          "bypass": "AzureServices"
        },
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "condition": "[parameters('enablePiiAuditLogging')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', format('staudit{0}{1}', uniqueString(resourceGroup().id), parameters('environmentName')), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('staudit{0}{1}', uniqueString(resourceGroup().id), parameters('environmentName')))]"
      ]
    },
    {
      "condition": "[parameters('enablePiiAuditLogging')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', format('staudit{0}{1}', uniqueString(resourceGroup().id), parameters('environmentName')), 'default', 'pii-audit-logs')]",
      "properties": {
        "publicAccess": "None",
        "metadata": {
          "purpose": "PII Access Audit Logs",
          "retention": "7 years"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('staudit{0}{1}', uniqueString(resourceGroup().id), parameters('environmentName')), 'default')]"
      ]
    },
    {
      "condition": "[parameters('enablePiiAuditLogging')]",
      "type": "Microsoft.Storage/storageAccounts/managementPolicies",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', format('staudit{0}{1}', uniqueString(resourceGroup().id), parameters('environmentName')), 'default')]",
      "properties": {
        "policy": {
          "rules": [
            {
              "name": "DeleteAfter7Years",
              "enabled": true,
              "type": "Lifecycle",
              "definition": {
                "filters": {
                  "blobTypes": [
                    "blockBlob"
                  ],
                  "prefixMatch": [
                    "pii-audit-logs/"
                  ]
                },
                "actions": {
                  "baseBlob": {
                    "delete": {
                      "daysAfterModificationGreaterThan": 2555
                    }
                  }
                }
              }
            },
            {
              "name": "MoveToArchiveAfter90Days",
              "enabled": true,
              "type": "Lifecycle",
              "definition": {
                "filters": {
                  "blobTypes": [
                    "blockBlob"
                  ],
                  "prefixMatch": [
                    "pii-audit-logs/"
                  ]
                },
                "actions": {
                  "baseBlob": {
                    "tierToArchive": {
                      "daysAfterModificationGreaterThan": 90
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('staudit{0}{1}', uniqueString(resourceGroup().id), parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Insights/actionGroups",
      "apiVersion": "2023-01-01",
      "name": "[format('ag-rbcleasing-{0}', parameters('environmentName'))]",
      "location": "global",
      "tags": "[parameters('tags')]",
      "properties": {
        "groupShortName": "[format('TB{0}', toUpper(parameters('environmentName')))]",
        "enabled": true,
        "emailReceivers": [
          {
            "name": "DevOpsTeam",
            "emailAddress": "[parameters('alertEmailAddress')]",
            "useCommonAlertSchema": true
          }
        ],
        "smsReceivers": "[if(and(parameters('enableSmsAlerts'), not(empty(parameters('smsPhoneNumber')))), createArray(createObject('name', 'OnCallEngineer', 'countryCode', '1', 'phoneNumber', parameters('smsPhoneNumber'))), createArray())]",
        "azureAppPushReceivers": "[if(equals(parameters('environmentName'), 'prod'), createArray(createObject('name', 'MobileApp', 'emailAddress', parameters('alertEmailAddress'))), createArray())]"
      }
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[format('alert-high-error-rate-{0}', parameters('environmentName'))]",
      "location": "global",
      "tags": "[parameters('tags')]",
      "properties": {
        "severity": "[if(equals(parameters('environmentName'), 'prod'), 1, 2)]",
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Insights/components', format('appi-rbcleasing-{0}', parameters('environmentName')))]"
        ],
        "evaluationFrequency": "PT5M",
        "windowSize": "PT15M",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "name": "HighErrorRate",
              "metricName": "exceptions/count",
              "metricNamespace": "microsoft.insights/components",
              "operator": "GreaterThan",
              "threshold": "[if(equals(parameters('environmentName'), 'prod'), 10, 50)]",
              "timeAggregation": "Count",
              "criterionType": "StaticThresholdCriterion"
            }
          ]
        },
        "autoMitigate": true,
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', format('ag-rbcleasing-{0}', parameters('environmentName')))]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/actionGroups', format('ag-rbcleasing-{0}', parameters('environmentName')))]",
        "[resourceId('Microsoft.Insights/components', format('appi-rbcleasing-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[format('alert-high-response-time-{0}', parameters('environmentName'))]",
      "location": "global",
      "tags": "[parameters('tags')]",
      "properties": {
        "severity": 2,
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Insights/components', format('appi-rbcleasing-{0}', parameters('environmentName')))]"
        ],
        "evaluationFrequency": "PT5M",
        "windowSize": "PT15M",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "name": "HighResponseTime",
              "metricName": "requests/duration",
              "metricNamespace": "microsoft.insights/components",
              "operator": "GreaterThan",
              "threshold": "[if(equals(parameters('environmentName'), 'prod'), 2000, 5000)]",
              "timeAggregation": "Average",
              "criterionType": "StaticThresholdCriterion"
            }
          ]
        },
        "autoMitigate": true,
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', format('ag-rbcleasing-{0}', parameters('environmentName')))]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/actionGroups', format('ag-rbcleasing-{0}', parameters('environmentName')))]",
        "[resourceId('Microsoft.Insights/components', format('appi-rbcleasing-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[format('alert-low-availability-{0}', parameters('environmentName'))]",
      "location": "global",
      "tags": "[parameters('tags')]",
      "properties": {
        "severity": 1,
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Insights/components', format('appi-rbcleasing-{0}', parameters('environmentName')))]"
        ],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "name": "LowAvailability",
              "metricName": "availabilityResults/availabilityPercentage",
              "metricNamespace": "microsoft.insights/components",
              "operator": "LessThan",
              "threshold": "[if(equals(parameters('environmentName'), 'prod'), 99, 95)]",
              "timeAggregation": "Average",
              "criterionType": "StaticThresholdCriterion"
            }
          ]
        },
        "autoMitigate": false,
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', format('ag-rbcleasing-{0}', parameters('environmentName')))]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/actionGroups', format('ag-rbcleasing-{0}', parameters('environmentName')))]",
        "[resourceId('Microsoft.Insights/components', format('appi-rbcleasing-{0}', parameters('environmentName')))]"
      ]
    }
  ],
  "outputs": {
    "workspaceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-rbcleasing-{0}', parameters('environmentName')))]"
    },
    "workspaceName": {
      "type": "string",
      "value": "[format('log-rbcleasing-{0}', parameters('environmentName'))]"
    },
    "applicationInsightsId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Insights/components', format('appi-rbcleasing-{0}', parameters('environmentName')))]"
    },
    "applicationInsightsName": {
      "type": "string",
      "value": "[format('appi-rbcleasing-{0}', parameters('environmentName'))]"
    },
    "applicationInsightsConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', format('appi-rbcleasing-{0}', parameters('environmentName'))), '2020-02-02').ConnectionString]"
    },
    "applicationInsightsInstrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', format('appi-rbcleasing-{0}', parameters('environmentName'))), '2020-02-02').InstrumentationKey]"
    },
    "actionGroupId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Insights/actionGroups', format('ag-rbcleasing-{0}', parameters('environmentName')))]"
    },
    "auditStorageAccountName": {
      "type": "string",
      "value": "[if(parameters('enablePiiAuditLogging'), format('staudit{0}{1}', uniqueString(resourceGroup().id), parameters('environmentName')), '')]"
    },
    "auditStorageAccountId": {
      "type": "string",
      "value": "[if(parameters('enablePiiAuditLogging'), resourceId('Microsoft.Storage/storageAccounts', format('staudit{0}{1}', uniqueString(resourceGroup().id), parameters('environmentName'))), '')]"
    }
  }
}