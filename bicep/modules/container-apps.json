{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "15184024291172554103"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "minReplicas": {
      "type": "int"
    },
    "maxReplicas": {
      "type": "int"
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": ""
    },
    "logAnalyticsWorkspaceId": {
      "type": "string"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string"
    },
    "applicationInsightsConnectionString": {
      "type": "string",
      "defaultValue": ""
    }
  },
  "variables": {
    "regionHasZones": "[contains(createArray('eastus', 'eastus2', 'westus2'), parameters('location'))]"
  },
  "resources": [
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2023-05-01",
      "name": "[format('cae-rbcleasing-{0}', parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2023-09-01').customerId]",
            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2023-09-01').primarySharedKey]"
          }
        },
        "zoneRedundant": "[and(equals(parameters('environmentName'), 'prod'), variables('regionHasZones'))]",
        "daprAIConnectionString": "[if(not(empty(parameters('applicationInsightsConnectionString'))), parameters('applicationInsightsConnectionString'), null())]"
      }
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "name": "[format('ca-rbcleasing-frontend-{0}', parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', format('cae-rbcleasing-{0}', parameters('environmentName')))]",
        "configuration": {
          "ingress": {
            "external": true,
            "targetPort": 80,
            "transport": "auto",
            "traffic": [
              {
                "latestRevision": true,
                "weight": 100
              }
            ]
          },
          "registries": [],
          "secrets": "[if(not(empty(parameters('keyVaultName'))), createArray(createObject('name', 'api-key', 'keyVaultUrl', format('https://{0}.vault.azure.net/secrets/api-key', parameters('keyVaultName')), 'identity', 'system')), createArray())]"
        },
        "template": {
          "scale": {
            "minReplicas": "[parameters('minReplicas')]",
            "maxReplicas": "[parameters('maxReplicas')]",
            "rules": [
              {
                "name": "http-requests",
                "http": {
                  "metadata": {
                    "concurrentRequests": "30"
                  }
                }
              },
              {
                "name": "cpu-utilization",
                "custom": {
                  "type": "cpu",
                  "metadata": {
                    "type": "Utilization",
                    "value": "70"
                  }
                }
              }
            ]
          },
          "containers": [
            {
              "name": "frontend",
              "image": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest",
              "resources": {
                "cpu": "[json(if(equals(parameters('environmentName'), 'prod'), '1.0', '0.25'))]",
                "memory": "[if(equals(parameters('environmentName'), 'prod'), '2Gi', '0.5Gi')]"
              },
              "env": [
                {
                  "name": "ENVIRONMENT",
                  "value": "[parameters('environmentName')]"
                },
                {
                  "name": "API_URL",
                  "value": "[format('https://ca-rbcleasing-backend-{0}.azurecontainerapps.io/api', parameters('environmentName'))]"
                },
                {
                  "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                  "value": "[parameters('applicationInsightsConnectionString')]"
                },
                {
                  "name": "NODE_ENV",
                  "value": "[if(equals(parameters('environmentName'), 'prod'), 'production', 'development')]"
                }
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', format('cae-rbcleasing-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "name": "[format('ca-rbcleasing-backend-{0}', parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', format('cae-rbcleasing-{0}', parameters('environmentName')))]",
        "configuration": {
          "ingress": {
            "external": true,
            "targetPort": 5000,
            "transport": "auto",
            "traffic": [
              {
                "latestRevision": true,
                "weight": 100
              }
            ]
          },
          "registries": [],
          "secrets": "[if(not(empty(parameters('keyVaultName'))), createArray(createObject('name', 'db-connection', 'keyVaultUrl', format('https://{0}.vault.azure.net/secrets/PostgreSQL-ConnectionString', parameters('keyVaultName')), 'identity', 'system')), createArray())]"
        },
        "template": {
          "scale": {
            "minReplicas": "[parameters('minReplicas')]",
            "maxReplicas": "[parameters('maxReplicas')]",
            "rules": [
              {
                "name": "http-requests",
                "http": {
                  "metadata": {
                    "concurrentRequests": "30"
                  }
                }
              },
              {
                "name": "cpu-utilization",
                "custom": {
                  "type": "cpu",
                  "metadata": {
                    "type": "Utilization",
                    "value": "70"
                  }
                }
              }
            ]
          },
          "containers": [
            {
              "name": "backend",
              "image": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest",
              "resources": {
                "cpu": "[json(if(equals(parameters('environmentName'), 'prod'), '1.0', '0.5'))]",
                "memory": "[if(equals(parameters('environmentName'), 'prod'), '2Gi', '1Gi')]"
              },
              "env": [
                {
                  "name": "ENVIRONMENT",
                  "value": "[parameters('environmentName')]"
                },
                {
                  "name": "KEY_VAULT_NAME",
                  "value": "[parameters('keyVaultName')]"
                },
                {
                  "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                  "value": "[parameters('applicationInsightsConnectionString')]"
                },
                {
                  "name": "NODE_ENV",
                  "value": "[if(equals(parameters('environmentName'), 'prod'), 'production', 'development')]"
                },
                {
                  "name": "PORT",
                  "value": "5000"
                }
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', format('cae-rbcleasing-{0}', parameters('environmentName')))]"
      ]
    }
  ],
  "outputs": {
    "frontendUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.App/containerApps', format('ca-rbcleasing-frontend-{0}', parameters('environmentName'))), '2023-05-01').configuration.ingress.fqdn)]"
    },
    "backendUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.App/containerApps', format('ca-rbcleasing-backend-{0}', parameters('environmentName'))), '2023-05-01').configuration.ingress.fqdn)]"
    },
    "fqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.App/containerApps', format('ca-rbcleasing-frontend-{0}', parameters('environmentName'))), '2023-05-01').configuration.ingress.fqdn]"
    },
    "backendFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.App/containerApps', format('ca-rbcleasing-backend-{0}', parameters('environmentName'))), '2023-05-01').configuration.ingress.fqdn]"
    },
    "principalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.App/containerApps', format('ca-rbcleasing-frontend-{0}', parameters('environmentName'))), '2023-05-01', 'full').identity.principalId]"
    },
    "backendPrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.App/containerApps', format('ca-rbcleasing-backend-{0}', parameters('environmentName'))), '2023-05-01', 'full').identity.principalId]"
    }
  }
}